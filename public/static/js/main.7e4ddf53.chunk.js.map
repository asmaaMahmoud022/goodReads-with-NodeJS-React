{"version":3,"sources":["reducers/loginReducer.js","reducers/registerReducer.js","reducers/adminHomeReducer.js","reducers/booksReducer.js","reducers/authorsReducer.js","reducers/categoriesReducer.js","reducers/generalReducer.js","reducers/index.js","actions/types.js","utils.js","actions/loginActions.js","components/home/NavbarForm.js","components/home/RegisterForm.js","actions/registerActions.js","components/home/HomeContent.js","components/home/index.js","actions/authorsActions.js","components/admin/authors/AuthorsTable.js","components/admin/authors/index.js","actions/booksActions.js","components/admin/books/BooksTable.js","components/admin/books/index.js","actions/categoriesActions.js","components/admin/categories/CategoriesTable.js","components/admin/categories/index.js","components/admin/CustomNavItem.js","actions/adminAction.js","components/admin/Home.js","components/admin/login/index.js","components/user/footer/index.js","components/user/navbar/index.js","components/user/dashboard/index.js","components/user/categories/index.js","components/user/books/BookItem.js","components/user/books/Books.js","components/user/categories/category.js","components/user/authors/index.js","components/user/authors/Author.js","components/user/books/index.js","components/user/books/Book.js","components/user/search/index.js","components/user/Home.js","components/admin/AdminRoute.js","components/admin/AdminLoggedInRoute.js","components/user/UserRoute.js","components/user/UserLoggedInRoute.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","email","password","token","user","image","firstName","lastName","passwordConfirm","isConfirmPasswordInvalid","emailState","activeTab","isBookModal","books","currentBook","name","activeTodosTab","todos","search","isAuthorModal","authors","currentAuthor","authorsList","isCategoryModal","categories","categoriesList","currentCategory","author","combineReducers","login","state","action","type","newState","payload","key","value","register","admin","i","length","dotProp","set","prop","merge","delete","general","APP_NAME","getUserToken","localStorage","getItem","setUserToken","setItem","API_HOST","showMessage","title","message","store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","handleError","err","console","log","response","data","updateLoginField","dispatch","NavbarForm","onChange","e","target","props","onSubmit","preventDefault","loginUser","this","Navbar","color","light","expand","NavbarBrand","href","Nav","className","navbar","Form","method","inline","FormGroup","Label","for","Input","placeholder","required","Button","Component","connect","axios","post","then","res","catch","RegisterForm","updateRegisterField","onConfirmPasswordChange","onPasswordChange","onChangeImage","files","signupUser","invalid","FormFeedback","CustomInput","id","formData","book","FormData","append","constructFormDataFromUserObject","HomeContent","Jumbotron","Home","document","history","push","Container","Row","Col","xs","updateAuthorsProps","AuthorsTable","editAuthorModal","index","dob","Date","isModal","renderActions","original","onClick","bind","style","marginRight","marginLeft","window","confirm","deleteAuthor","_id","columns","Header","accessor","minWidth","Cell","src","width","height","info","toDateString","sortable","defaultPageSize","getTdProps","display","justifyContent","Authors","toggle","addNewAuthor","updateAuthor","sm","padding","Modal","isOpen","ModalHeader","ModalBody","selected","dateFormat","ModalFooter","constructFormDataFromAuthorObject","patch","updateBooksProps","deleteBooksProps","mergeBooksProps","BooksTable","editBookModal","deleteBook","Books","category","addNewBook","updateBook","options","getOptionLabel","option","getOptionValue","constructFormDataFromBookObject","updateCategoriesProps","CategoriesTable","editCategoryModal","deleteCategory","Categories","addNewCategory","updateCategory","CustomNavItem","tab","NavItem","NavLink","classnames","active","updateAdminProps","defaults","headers","common","getAllBooks","getAllAuthors","getAllCategories","tabs","TabContent","TabPane","tabId","get","Login","validateEmail","test","handleChange","event","checked","loginAdmin","submitForm","valid","FormText","username","backgroundColor","borderTop","textAlign","position","left","bottom","phantom","Footer","MainNavbar","q","searchBooks","marginBottom","tag","Link","to","Collapse","size","logoutUser","NavbarToggler","setState","removeItem","slug","Dashboard","renderSelect","shelve","menuPortalTarget","body","todo","newTodo","updateTodoListItem","filterable","hasOwnProperty","getAllTodos","rowInfo","column","overflow","bookId","fontWeight","textTransform","Object","keys","map","Book","Card","CardImg","top","alt","CardBody","CardTitle","CardSubtitle","Category","ownProps","match","params","getCategory","Author","getBook","userId","myRate","rates","review","reviews","userRateIndex","rate","reduce","sum","flexDirection","alignItems","Media","object","updateTodo","submitTodo","rating","starHoverColor","starRatedColor","changeRating","updateRate","submitRate","numberOfStars","starDimension","starSpacing","xm","addReview","paddingTop","content","date","reviewrId","textDecoration","deleteReview","CardText","Search","queryString","parse","location","UserHome","JWT","getAllData","component","path","exact","acc","AdminRoute","rest","render","AdminLoggedInRoute","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","RootReducer","applyMiddleware","Thunk","App","AdminLogin","AdminHome","UserLoggedInRoute","UserRoute","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7e4ddf53.chunk.js","sourcesContent":["import { UPDATE_LOGIN_FIELD } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  token: null,\n  user: { image: \"\" },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_LOGIN_FIELD:\n      const newState = { ...state };\n      const { key, value } = action.payload;\n      newState[key] = value;\n      return newState;\n    default:\n      return state;\n  }\n};\n","import { UPDATE_REGISTER_FIELD, RESET_REGISTER_FIELDS } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirm: \"\",\n  isConfirmPasswordInvalid: false,\n  image: \"\",\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_REGISTER_FIELD:\n      const newState = { ...state };\n      const { key, value } = action.payload;\n      newState[key] = value;\n      return newState;\n    case RESET_REGISTER_FIELDS:\n      return INITIAL_STATE\n    default:\n      return state;\n  }\n};\n","import dotProp from \"dot-prop-immutable\";\n\nimport {\n  UPDATE_ADMIN_PROPS,\n  DELETE_ADMIN_PROPS,\n  MERGE_ADMIN_PROPS,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  token: \"\",\n  email: \"\",\n  password: \"\",\n  emailState: \"\",\n\n  activeTab: \"1\",\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_ADMIN_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.set(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case MERGE_ADMIN_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.merge(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case DELETE_ADMIN_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.delete(newState, action.payload[i].prop);\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","import dotProp from \"dot-prop-immutable\";\n\nimport {\n  UPDATE_BOOKS_PROPS,\n  DELETE_BOOKS_PROPS,\n  MERGE_BOOKS_PROPS,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isBookModal: false,\n  books: [],\n  currentBook: {\n    name: \"\",\n  },\n\n  activeTodosTab: \"1\",\n  todos: [],\n\n  search: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_BOOKS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.set(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case MERGE_BOOKS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.merge(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case DELETE_BOOKS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.delete(newState, action.payload[i].prop);\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","import dotProp from \"dot-prop-immutable\";\n\nimport {\n  UPDATE_AUTHORS_PROPS,\n  DELETE_AUTHORS_PROPS,\n  MERGE_AUTHORS_PROPS,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isAuthorModal: false,\n  authors: [],\n  currentAuthor: {},\n  authorsList: {},\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_AUTHORS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.set(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case MERGE_AUTHORS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.merge(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case DELETE_AUTHORS_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.delete(newState, action.payload[i].prop);\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","import dotProp from \"dot-prop-immutable\";\n\nimport {\n  UPDATE_CATEGORIES_PROPS,\n  DELETE_CATEGORIES_PROPS,\n  MERGE_CATEGORIES_PROPS,\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isCategoryModal: false,\n  categories: [],\n  categoriesList: {},\n  currentCategory: {\n    name: \"\",\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_CATEGORIES_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.set(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case MERGE_CATEGORIES_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.merge(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    case DELETE_CATEGORIES_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.delete(newState, action.payload[i].prop);\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","import dotProp from \"dot-prop-immutable\";\n\nimport { UPDATE_GENERAL_PROPS } from \"../actions/types\";\nconst INITIAL_STATE = {\n  author: [],\n  categories: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_GENERAL_PROPS: {\n      let newState = state;\n      for (let i = 0; i < action.payload.length; i++) {\n        newState = dotProp.set(\n          newState,\n          action.payload[i].prop,\n          action.payload[i].value\n        );\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./loginReducer\";\nimport registerReducer from \"./registerReducer\";\nimport adminReducer from \"./adminHomeReducer\";\nimport booksReducer from \"./booksReducer\";\nimport authorsReducer from \"./authorsReducer\";\nimport categoriesReducer from \"./categoriesReducer\";\nimport generalReducer from \"./generalReducer\";\n\nexport default combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  admin: adminReducer,\n  general: generalReducer,\n  books: booksReducer,\n  authors: authorsReducer,\n  categories: categoriesReducer,\n});\n","export const UPDATE_LOGIN_FIELD = \"UPDATE_LOGIN_FIELD\";\n\nexport const UPDATE_REGISTER_FIELD = \"UPDATE_REGISTER_FIELD\";\nexport const RESET_REGISTER_FIELDS = \"RESET_REGISTER_FIELDS\";\n\nexport const UPDATE_ADMIN_PROPS = \"UPDATE_ADMIN_PROPS\";\nexport const DELETE_ADMIN_PROPS = \"DELETE_ADMIN_PROPS\";\nexport const MERGE_ADMIN_PROPS = \"MERGE_ADMIN_PROPS\";\n\nexport const UPDATE_BOOKS_PROPS = \"UPDATE_BOOKS_PROPS\";\nexport const DELETE_BOOKS_PROPS = \"DELETE_BOOKS_PROPS\";\nexport const MERGE_BOOKS_PROPS = \"MERGE_BOOKS_PROPS\";\n\n\nexport const UPDATE_CATEGORIES_PROPS = \"UPDATE_CATEGORIES_PROPS\";\nexport const DELETE_CATEGORIES_PROPS = \"DELETE_CATEGORIES_PROPS\";\nexport const MERGE_CATEGORIES_PROPS = \"MERGE_CATEGORIES_PROPS\";\n\n\nexport const UPDATE_AUTHORS_PROPS = \"UPDATE_AUTHORS_PROPS\";\nexport const DELETE_AUTHORS_PROPS = \"DELETE_AUTHORS_PROPS\";\nexport const MERGE_AUTHORS_PROPS = \"MERGE_AUTHORS_PROPS\";\n\nexport const UPDATE_GENERAL_PROPS = \"UPDATE_GENERAL_PROPS\";\n","import { store } from \"react-notifications-component\";\n\nexport const APP_NAME = \"Good Reads\";\n\nexport const getUserToken = () => localStorage.getItem(\"token\");\n\nexport const setUserToken = (token) => localStorage.setItem(\"token\", token);\nexport const deleteUserToken = () => localStorage.removeItem(\"token\");\n\nexport const HOST = \"\";\nexport const API_HOST = `${HOST}/api`;\n\nexport const showMessage = (title, message, type) => {\n  store.addNotification({\n    title,\n    message,\n    type,\n    insert: \"top\",\n    container: \"top-center\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n  });\n};\n\nexport const handleError = (err) => {\n  console.log(err);\n  showMessage(\n    \"Error!\",\n    (err.response && err.response.data.message) || \"Something went wrong.\",\n    \"danger\"\n  );\n};\n","import { UPDATE_LOGIN_FIELD } from \"./types\";\nimport axios from \"axios\";\nimport {\n  API_HOST,\n  handleError,\n  showMessage,\n  setUserToken,\n  deleteUserToken,\n} from \"../utils\";\n\nexport const updateLoginField = (key, value) => (dispatch) => {\n  dispatch({ type: UPDATE_LOGIN_FIELD, payload: { key, value } });\n};\n\nexport const loginUser = (email, password) => (dispatch) => {\n  axios\n    .post(`${API_HOST}/login`, { email, password })\n    .then((res) => {\n      const { token, message } = res.data;\n      setUserToken(token);\n      dispatch(updateLoginField(\"email\", \"\"));\n      dispatch(updateLoginField(\"password\", \"\"));\n      dispatch(updateLoginField(\"token\", token));\n      showMessage(\"Success!\", message, \"success\");\n    })\n    .catch((err) => handleError(err));\n};\n\nexport const logoutUser = () => (dispatch) => {\n  deleteUserToken();\n  dispatch(updateLoginField(\"token\", null));\n  showMessage(\"Success!\", \"Logged out successsuly!\", \"success\");\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nimport { updateLoginField, loginUser } from \"../../actions/loginActions\";\n\nclass NavbarForm extends Component {\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.props.updateLoginField(name, value);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password, loginUser } = this.props;\n    loginUser(email, password);\n  };\n  render() {\n    const { email, password } = this.props;\n    return (\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Good Reads</NavbarBrand>\n\n        <Nav className=\"ml-auto\" navbar>\n          <Form method=\"POST\" inline onSubmit={this.onSubmit}>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n              <Label for=\"exampleEmail\" className=\"mr-sm-2\">\n                Email\n              </Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                onChange={this.onChange}\n                placeholder=\"something@example.com\"\n                value={email}\n                required\n              />\n            </FormGroup>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n              <Label for=\"examplePassword\" className=\"mr-sm-2\">\n                Password\n              </Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                onChange={this.onChange}\n                placeholder=\"123456\"\n                value={password}\n                required\n              />\n            </FormGroup>\n            <Button type=\"submit\">Sign in</Button>\n          </Form>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { email, password } = state.login;\n  return { email, password };\n};\n\nexport default connect(mapStateToProps, { updateLoginField, loginUser })(\n  NavbarForm\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  CustomInput,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { updateRegisterField, signupUser } from \"../../actions/registerActions\";\nclass RegisterForm extends Component {\n  onChange = (e) => {\n    const { name, value } = e.target;\n\n    this.props.updateRegisterField(name, value);\n  };\n\n  onConfirmPasswordChange = (e) => {\n    const { name, value } = e.target;\n\n    this.props.updateRegisterField(\n      \"isConfirmPasswordInvalid\",\n      this.props.password !== value\n    );\n\n    this.props.updateRegisterField(name, value);\n  };\n\n  onPasswordChange = (e) => {\n    const { name, value } = e.target;\n\n    this.props.updateRegisterField(\n      \"isConfirmPasswordInvalid\",\n      this.props.passwordConfirm !== value\n    );\n\n    this.props.updateRegisterField(name, value);\n  };\n  onChangeImage = (e) => {\n    const image = e.target.files[0];\n    this.props.updateRegisterField(\"image\", image);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { firstName, lastName, email, password, image } = this.props;\n\n    this.props.signupUser({\n      firstName,\n      lastName,\n      email,\n      password,\n      image,\n    });\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      passwordConfirm,\n      isConfirmPasswordInvalid,\n    } = this.props;\n    return (\n      <Form method=\"POST\" onSubmit={this.onSubmit}>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"first name\"\n            onChange={this.onChange}\n            value={firstName}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"last name\"\n            onChange={this.onChange}\n            value={lastName}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"somthing@example.com\"\n            onChange={this.onChange}\n            value={email}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={this.onPasswordChange}\n            value={password}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"passwordConfirm\"\n            placeholder=\"confirm password\"\n            onChange={this.onConfirmPasswordChange}\n            value={passwordConfirm}\n            invalid={isConfirmPasswordInvalid}\n            required\n          />\n          <FormFeedback>Confirm password does not match.</FormFeedback>\n        </FormGroup>\n        <FormGroup>\n          <CustomInput\n            id=\"image\"\n            type=\"file\"\n            name=\"image\"\n            placeholder=\"choose image\"\n            onChange={this.onChangeImage}\n            required\n          />\n        </FormGroup>\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    passwordConfirm,\n    image,\n    isConfirmPasswordInvalid,\n  } = state.register;\n  return {\n    firstName,\n    lastName,\n    email,\n    password,\n    passwordConfirm,\n    image,\n    isConfirmPasswordInvalid,\n  };\n};\n\nexport default connect(mapStateToProps, { updateRegisterField, signupUser })(\n  RegisterForm\n);\n","import {\n  UPDATE_REGISTER_FIELD,\n  UPDATE_GENERAL_PROPS,\n  UPDATE_LOGIN_FIELD,\n  RESET_REGISTER_FIELDS,\n} from \"./types\";\nimport axios from \"axios\";\nimport { API_HOST, handleError, showMessage, setUserToken } from \"../utils\";\n\nexport const updateRegisterField = (key, value) => (dispatch) => {\n  dispatch({ type: UPDATE_REGISTER_FIELD, payload: { key, value } });\n};\nexport const updateGeneralProps = (payload) => (dispatch) => {\n  dispatch({ type: UPDATE_GENERAL_PROPS, payload });\n};\n\nconst constructFormDataFromUserObject = (book) => {\n  const formData = new FormData();\n\n  const { firstName, lastName, email, password, image } = book;\n  formData.append(\"firstName\", firstName);\n  formData.append(\"lastName\", lastName);\n  formData.append(\"email\", email);\n  formData.append(\"password\", password);\n  formData.append(\"image\", image);\n\n  return formData;\n};\n\nexport const signupUser = (user) => (dispatch) => {\n  const formData = constructFormDataFromUserObject(user);\n  console.log(\"formData\", formData);\n  axios\n    .post(`${API_HOST}/signup`, formData)\n    .then((res) => {\n      const { token, message } = res.data;\n      setUserToken(token);\n      dispatch({\n        type: UPDATE_LOGIN_FIELD,\n        payload: { key: \"token\", value: token },\n      });\n      dispatch({ type: RESET_REGISTER_FIELDS });\n      showMessage(\"Success!\", message, \"success\");\n    })\n    .catch((err) => handleError(err));\n};\n","import React, { Component } from \"react\";\nimport { Jumbotron } from \"reactstrap\";\nexport default class HomeContent extends Component {\n  render() {\n    return (\n      <Jumbotron>\n        <h2 className=\"display-3\">Welcome to Good Reads!</h2>\n        <p className=\"lead\">Where you can increase your knowledge</p>\n        <hr className=\"my-2\" />\n\n        <p className=\"lead\">Join us NOW!</p>\n      </Jumbotron>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport NavbarForm from \"./NavbarForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport HomeContent from \"./HomeContent\";\nimport { APP_NAME } from \"../../utils\";\n\nclass Home extends Component {\n  componentDidMount() {\n    document.title = `Home - ${APP_NAME}`;\n  }\n  componentDidUpdate() {\n    if (this.props.token) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <Container>\n        <NavbarForm />\n        <Row>\n          <Col xs=\"6\">\n            <HomeContent />\n          </Col>\n          <Col xs=\"6\">\n            <RegisterForm />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.login.token,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import {\n  UPDATE_AUTHORS_PROPS,\n  DELETE_AUTHORS_PROPS,\n  MERGE_AUTHORS_PROPS,\n} from \"./types\";\nimport axios from \"axios\";\n\nimport { API_HOST, handleError, showMessage } from \"../utils\";\n\nexport const updateAuthorsProps = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_AUTHORS_PROPS,\n    payload,\n  });\n};\n\nexport const deleteAuthorsProps = (payload) => (dispatch) => {\n  dispatch({\n    type: DELETE_AUTHORS_PROPS,\n    payload,\n  });\n};\n\nexport const mergeAuthorsProps = (payload) => (dispatch) => {\n  dispatch({\n    type: MERGE_AUTHORS_PROPS,\n    payload,\n  });\n};\n\n\nexport const getAllAuthors = () => (dispatch) => {\n  axios\n    .get(`${API_HOST}/authors`)\n    .then((data) => {\n      const authors = data.data.data;\n      dispatch(updateAuthorsProps([{ prop: \"authors\", value: authors }]));\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nconst constructFormDataFromAuthorObject = (user) => {\n  const formData = new FormData();\n\n  const { firstName, lastName, image, dob } = user;\n  formData.append(\"firstName\", firstName);\n  formData.append(\"lastName\", lastName);\n  formData.append(\"dob\", dob);\n  formData.append(\"image\", image);\n  return formData;\n};\n\nexport const addNewAuthor = (author) => (dispatch) => {\n  const formData = constructFormDataFromAuthorObject(author);\n  axios\n    .post(`${API_HOST}/authors`, formData)\n    .then((data) => {\n      const author = data.data.data;\n      dispatch(mergeAuthorsProps([{ prop: \"authors\", value: author }]));\n      dispatch(updateAuthorsProps([{ prop: \"isAuthorModal\", value: false }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const updateAuthor = (author, index) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/authors/${author._id}`, author)\n    .then((data) => {\n      const author = data.data.data;\n      dispatch(updateAuthorsProps([{ prop: \"authors.\" + index, value: author }]));\n      dispatch(updateAuthorsProps([{ prop: \"isAuthorModal\", value: false }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const deleteAuthor = (_id, index) => (dispatch) => {\n  axios\n    .delete(`${API_HOST}/authors/${_id}`)\n    .then((data) => {\n      dispatch(deleteAuthorsProps([{ prop: \"authors.\" + index }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table-v6\";\nimport \"react-table-v6/react-table.css\";\nimport { Button } from \"reactstrap\";\n\nimport { HOST } from \"../../../utils\";\nimport {\n  updateAuthorsProps,\n  deleteAuthor,\n} from \"../../../actions/authorsActions\";\n\nclass AuthorsTable extends Component {\n  editAuthorModal = (author, index) => {\n    author.index = index;\n    this.props.updateAuthorsProps([\n      {\n        prop: \"currentAuthor\",\n        value: { ...author, dob: new Date(author.dob) },\n      },\n      {\n        prop: \"isAuthorModal\",\n        value: !this.props.isModal,\n      },\n    ]);\n  };\n\n  renderActions = ({ original, index }) => {\n    return (\n      <div>\n        <Button\n          onClick={this.editAuthorModal.bind(this, original, index)}\n          color=\"primary\"\n          style={{ marginRight: 10, marginLeft: 10 }}\n        >\n          <i className=\"fa fa-edit\" />\n        </Button>\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            if (window.confirm(\"Are you sure?\")) {\n              this.props.deleteAuthor(original._id, index);\n            }\n          }}\n        >\n          <i className=\"fa fa-trash\" />\n        </Button>\n      </div>\n    );\n  };\n  columns = [\n    { Header: \"Id\", accessor: \"_id\", minWidth: 200 },\n    { Header: \"Firstname\", accessor: \"firstName\" },\n    { Header: \"Lastname\", accessor: \"lastName\" },\n    {\n      Header: \"Image\",\n      Cell: ({ original: { image } }) => (\n        <img\n          src={`${HOST}/images/${image}`}\n          style={{ width: \"50px\", height: \"40px\" }}\n        />\n      ),\n    },\n    {\n      Header: \"Date of birth\",\n      Cell: (info) => new Date(info.original.dob).toDateString(),\n    },\n\n    {\n      Header: \"Actions\",\n      Cell: this.renderActions.bind(this),\n      sortable: false,\n    },\n  ];\n\n  render() {\n    const { authors } = this.props;\n\n    return (\n      <ReactTable\n        defaultPageSize={5}\n        columns={this.columns}\n        data={authors}\n        getTdProps={() => {\n          return {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\",\n            },\n          };\n        }}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { authors, isAuthorModal } = state.authors;\n  return { authors, isModal: isAuthorModal };\n};\n\nexport default connect(mapStateToProps, {\n  updateAuthorsProps,\n  deleteAuthor,\n})(AuthorsTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  CustomInput,\n  FormGroup,\n} from \"reactstrap\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./customDatePickerWidth.css\";\n\nimport Table from \"./AuthorsTable\";\n\nimport {\n  updateAuthorsProps,\n  addNewAuthor,\n  updateAuthor,\n} from \"../../../actions/authorsActions\";\n\nclass Authors extends Component {\n  toggle = () => {\n    this.props.updateAuthorsProps([\n      {\n        prop: \"currentAuthor\",\n        value: { dob: new Date() },\n      },\n      {\n        prop: \"isAuthorModal\",\n        value: !this.props.isModal,\n      },\n    ]);\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.props.updateAuthorsProps([{ prop: \"currentAuthor.\" + name, value }]);\n  };\n  onChangeImage = (e) => {\n    const image = e.target.files[0];\n    this.props.updateAuthorsProps([\n      { prop: \"currentAuthor.image\", value: image },\n    ]);\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { addNewAuthor, updateAuthor, currentAuthor } = this.props;\n    currentAuthor._id\n      ? updateAuthor(currentAuthor, currentAuthor.index)\n      : addNewAuthor(currentAuthor);\n  };\n  render() {\n    const { isModal, currentAuthor } = this.props;\n    const { _id, firstName, lastName, dob } = currentAuthor;\n    return (\n      <div>\n        <Row>\n          <Col\n            sm=\"12\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"20px\",\n            }}\n          >\n            <Button color=\"success\" onClick={this.toggle}>\n              <i className=\"fa fa-plus\" />\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <Table />\n          </Col>\n        </Row>\n\n        <Modal isOpen={isModal} toggle={this.toggle}>\n          <Form onSubmit={this.onSubmit} method=\"POST\">\n            <ModalHeader toggle={this.toggle}>Author</ModalHeader>\n            <ModalBody>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"First name\"\n                  value={firstName}\n                  onChange={this.onChange}\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={this.onChange}\n                  required\n                />\n              </FormGroup>\n\n              {!_id && (\n                <FormGroup>\n                  <CustomInput\n                    required\n                    id=\"image\"\n                    type=\"file\"\n                    name=\"image\"\n                    placeholder=\"choose image\"\n                    onChange={this.onChangeImage}\n                  />\n                </FormGroup>\n              )}\n              <FormGroup>\n                <div className=\"customDatePickerWidth\">\n                  <DatePicker\n                    selected={dob}\n                    name=\"dob\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    onChange={(value) =>\n                      this.props.updateAuthorsProps([\n                        { prop: \"currentAuthor.dob\", value },\n                      ])\n                    }\n                  />\n                </div>\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n              <Button color=\"secondary\" onClick={this.toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isAuthorModal, currentAuthor } = state.authors;\n  return { isModal: isAuthorModal, currentAuthor };\n};\n\nexport default connect(mapStateToProps, {\n  updateAuthorsProps,\n  addNewAuthor,\n  updateAuthor,\n})(Authors);\n","import {\n  UPDATE_BOOKS_PROPS,\n  DELETE_BOOKS_PROPS,\n  MERGE_BOOKS_PROPS,\n  UPDATE_CATEGORIES_PROPS,\n  UPDATE_AUTHORS_PROPS,\n} from \"./types\";\nimport axios from \"axios\";\n\nimport { API_HOST, handleError, showMessage } from \"../utils\";\n\nexport const updateBooksProps = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_BOOKS_PROPS,\n    payload,\n  });\n};\n\nexport const deleteBooksProps = (payload) => (dispatch) => {\n  dispatch({\n    type: DELETE_BOOKS_PROPS,\n    payload,\n  });\n};\n\nexport const mergeBooksProps = (payload) => (dispatch) => {\n  dispatch({\n    type: MERGE_BOOKS_PROPS,\n    payload,\n  });\n};\n\nexport const getAllData = () => (dispatch) => {\n  axios\n    .get(`${API_HOST}/books`)\n    .then((data) => {\n      const books = data.data.data;\n\n      const categories = books.reduce((acc, book) => {\n        const category = book.category;\n        if (!acc.hasOwnProperty(category._id))\n          acc[category._id] = { name: category.name, books: [book] };\n        else acc[category._id][\"books\"].push(book);\n        return acc;\n      }, {});\n\n      const authors = books.reduce((acc, book) => {\n        const author = book.author;\n        if (!acc.hasOwnProperty(author._id))\n          acc[author._id] = { ...author, books: [book] };\n        else acc[author._id][\"books\"].push(book);\n        return acc;\n      }, {});\n\n      dispatch(updateBooksProps([{ prop: \"books\", value: books }]));\n      dispatch({\n        type: UPDATE_CATEGORIES_PROPS,\n        payload: [{ prop: \"categoriesList\", value: categories }],\n      });\n\n      dispatch({\n        type: UPDATE_AUTHORS_PROPS,\n        payload: [{ prop: \"authorsList\", value: authors }],\n      });\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const getAllBooks = () => (dispatch) => {\n  axios\n    .get(`${API_HOST}/books`)\n    .then((data) => {\n      const books = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"books\", value: books }]));\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const searchBooks = (slug) => (dispatch) => {\n  axios\n    .get(`${API_HOST}/search/${slug}`)\n    .then((data) => {\n      const books = data.data.data;\n      console.log(\"search\", books);\n      dispatch(updateBooksProps([{ prop: \"search\", value: books }]));\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const getBook = (_id) => (dispatch) => {\n  axios\n    .get(`${API_HOST}/books/${_id}`)\n    .then((data) => {\n      const book = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"currentBook\", value: book }]));\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nconst constructFormDataFromBookObject = (user) => {\n  const formData = new FormData();\n\n  const { name, author, category, image } = user;\n  formData.append(\"name\", name);\n  formData.append(\"author\", author._id);\n  formData.append(\"category\", category._id);\n  formData.append(\"image\", image);\n  return formData;\n};\n\nexport const addNewBook = (book) => (dispatch) => {\n  const formData = constructFormDataFromBookObject(book);\n  axios\n    .post(`${API_HOST}/books`, formData)\n    .then((data) => {\n      const book = data.data.data;\n      dispatch(mergeBooksProps([{ prop: \"books\", value: book }]));\n      dispatch(updateBooksProps([{ prop: \"isBookModal\", value: false }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const updateBook = (book, index) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/books/${book._id}`, book)\n    .then((data) => {\n      const book = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"books.\" + index, value: book }]));\n      dispatch(updateBooksProps([{ prop: \"isBookModal\", value: false }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const deleteBook = (_id, index) => (dispatch) => {\n  axios\n    .delete(`${API_HOST}/books/${_id}`)\n    .then((data) => {\n      dispatch(deleteBooksProps([{ prop: \"books.\" + index }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const submitRate = (bookId, value) => (dispatch) => {\n  axios\n    .post(`${API_HOST}/rates/${bookId}`, { value })\n    .then((data) => {\n      const rate = data.data.data;\n\n      dispatch(updateBooksProps([{ prop: \"currentBook.myRate\", value: rate }]));\n      dispatch(mergeBooksProps([{ prop: \"currentBook.rates\", value: rate }]));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateRate = (_id, value, index) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/rates/${_id}`, { value })\n    .then((data) => {\n      dispatch(\n        updateBooksProps([\n          { prop: \"currentBook.myRate.value\", value },\n          { prop: `currentBook.rates.${index}.value`, value },\n        ])\n      );\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const submitTodo = (bookId, shelve) => (dispatch) => {\n  axios\n    .post(`${API_HOST}/todos/${bookId}`, { shelve })\n    .then((data) => {\n      const todo = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"currentBook.todo\", value: todo }]));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateTodo = (bookId, shelve) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/todos/${bookId}`, { shelve })\n    .then((data) => {\n      const todo = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"currentBook.todo\", value: todo }]));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateTodoListItem = (bookId, shelve, index) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/todos/${bookId}`, { shelve })\n    .then((data) => {\n      const todo = data.data.data;\n      dispatch(\n        updateBooksProps([{ prop: `todos.${index}.shelve`, value: shelve }])\n      );\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const addReview = (bookId, content) => (dispatch) => {\n  axios\n    .post(`${API_HOST}/reviews/${bookId}`, { content })\n    .then((data) => {\n      const reviews = data.data.data;\n      dispatch(\n        updateBooksProps([{ prop: \"currentBook.reviews\", value: reviews }])\n      );\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const deleteReview = (_id, index) => (dispatch) => {\n  axios\n    .post(`${API_HOST}/reviews/${_id}`)\n    .then((data) => {\n      dispatch(deleteBooksProps([{ prop: `currentBook.reviews.${index}` }]));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getAllTodos = () => (dispatch) => {\n  axios\n    .get(`${API_HOST}/todos`)\n    .then((data) => {\n      const todos = data.data.data;\n      dispatch(updateBooksProps([{ prop: \"todos\", value: todos }]));\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table-v6\";\nimport \"react-table-v6/react-table.css\";\nimport { Button } from \"reactstrap\";\n\nimport { HOST } from \"../../../utils\";\nimport { updateBooksProps, deleteBook } from \"../../../actions/booksActions\";\n\nclass BooksTable extends Component {\n  editBookModal = (book, index) => {\n    book.index = index;\n    this.props.updateBooksProps([\n      { prop: \"currentBook\", value: book },\n      {\n        prop: \"isBookModal\",\n        value: !this.props.isModal,\n      },\n    ]);\n  };\n\n  renderActions = ({ original, index }) => {\n    return (\n      <div>\n        <Button\n          onClick={this.editBookModal.bind(this, original, index)}\n          color=\"primary\"\n          style={{ marginRight: 10, marginLeft: 10 }}\n        >\n          <i className=\"fa fa-edit\" />\n        </Button>\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            if (window.confirm(\"Are you sure?\")) {\n              this.props.deleteBook(original._id, index);\n            }\n          }}\n        >\n          <i className=\"fa fa-trash\" />\n        </Button>\n      </div>\n    );\n  };\n  columns = [\n    { Header: \"Id\", accessor: \"_id\", minWidth: 200 },\n    { Header: \"Name\", accessor: \"name\" },\n    {\n      Header: \"Image\",\n      Cell: ({ original: { image } }) => (\n        <img\n          src={`${HOST}/images/${image}`}\n          style={{ width: \"50px\", height: \"40px\" }}\n        />\n      ),\n    },\n    { Header: \"Category\", accessor: \"category.name\" },\n    {\n      Header: \"Author\",\n      Cell: (info) => {\n        if (!info.original.author) return;\n        const { firstName, lastName } = info.original.author;\n        return firstName + \" \" + lastName;\n      },\n    },\n    {\n      Header: \"Actions\",\n      Cell: this.renderActions.bind(this),\n      sortable: false,\n    },\n  ];\n\n  render() {\n    const { books } = this.props;\n\n    return (\n      <ReactTable\n        defaultPageSize={5}\n        columns={this.columns}\n        data={books}\n        getTdProps={() => {\n          return {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\",\n            },\n          };\n        }}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { books, isBookModal } = state.books;\n  return { books, isModal: isBookModal };\n};\n\nexport default connect(mapStateToProps, {\n  updateBooksProps,\n  deleteBook,\n})(BooksTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  FormGroup,\n  CustomInput,\n} from \"reactstrap\";\nimport Select from \"react-select\";\n\nimport Table from \"./BooksTable\";\n\nimport {\n  addNewBook,\n  updateBook,\n  updateBooksProps,\n} from \"../../../actions/booksActions\";\n\nclass Books extends Component {\n  toggle = () => {\n    const { isModal, categories, authors } = this.props;\n    this.props.updateBooksProps([\n      {\n        prop: \"currentBook\",\n        value: { name: \"\", category: categories[0], author: authors[0] },\n      },\n      {\n        prop: \"isBookModal\",\n        value: !isModal,\n      },\n    ]);\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.props.updateBooksProps([{ prop: \"currentBook.\" + name, value }]);\n  };\n  onChangeImage = (e) => {\n    const image = e.target.files[0];\n    this.props.updateBooksProps([{ prop: \"currentBook.image\", value: image }]);\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { addNewBook, updateBook, currentBook } = this.props;\n    currentBook._id\n      ? updateBook(currentBook, currentBook.index)\n      : addNewBook(currentBook);\n  };\n  render() {\n    const { isModal, currentBook, categories, authors } = this.props;\n    const { _id, name, author, category } = currentBook;\n    return (\n      <div>\n        <Row>\n          <Col\n            sm=\"12\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"20px\",\n            }}\n          >\n            <Button color=\"success\" onClick={this.toggle}>\n              <i className=\"fa fa-plus\" />\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <Table />\n          </Col>\n        </Row>\n\n        <Modal isOpen={isModal} toggle={this.toggle}>\n          <Form onSubmit={this.onSubmit} method=\"POST\">\n            <ModalHeader toggle={this.toggle}>Book</ModalHeader>\n            <ModalBody>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"book name\"\n                  value={name}\n                  onChange={this.onChange}\n                  required\n                />\n              </FormGroup>\n              {!_id && (\n                <FormGroup>\n                  <CustomInput\n                    required\n                    id=\"image\"\n                    type=\"file\"\n                    name=\"image\"\n                    placeholder=\"choose image\"\n                    onChange={this.onChangeImage}\n                  />\n                </FormGroup>\n              )}\n              <FormGroup>\n                <Select\n                  value={category}\n                  placeholder=\"Select Category\"\n                  options={categories}\n                  getOptionLabel={(option) => option.name}\n                  getOptionValue={(option) => option._id}\n                  required\n                  onChange={(value) =>\n                    this.props.updateBooksProps([\n                      { prop: \"currentBook.category\", value },\n                    ])\n                  }\n                />\n              </FormGroup>\n              <FormGroup>\n                <Select\n                  value={author}\n                  placeholder=\"Select author\"\n                  options={authors}\n                  getOptionLabel={({ firstName, lastName }) =>\n                    `${firstName} ${lastName}`\n                  }\n                  getOptionValue={(option) => option._id}\n                  onChange={(value) =>\n                    this.props.updateBooksProps([\n                      { prop: \"currentBook.author\", value },\n                    ])\n                  }\n                />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n              <Button color=\"secondary\" onClick={this.toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isBookModal, currentBook } = state.books;\n  const { authors } = state.authors;\n  const { categories } = state.categories;\n  return { isModal: isBookModal, currentBook, categories, authors };\n};\n\nexport default connect(mapStateToProps, {\n  updateBooksProps,\n  addNewBook,\n  updateBook,\n})(Books);\n","import {\n  UPDATE_CATEGORIES_PROPS,\n  DELETE_CATEGORIES_PROPS,\n  MERGE_CATEGORIES_PROPS,\n} from \"./types\";\nimport axios from \"axios\";\n\nimport { API_HOST, handleError, showMessage } from \"../utils\";\n\nexport const updateCategoriesProps = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_CATEGORIES_PROPS,\n    payload,\n  });\n};\n\nexport const deleteCategoriesProps = (payload) => (dispatch) => {\n  dispatch({\n    type: DELETE_CATEGORIES_PROPS,\n    payload,\n  });\n};\n\nexport const mergeCategoriesProps = (payload) => (dispatch) => {\n  dispatch({\n    type: MERGE_CATEGORIES_PROPS,\n    payload,\n  });\n};\n\nexport const getAllCategories = () => (dispatch) => {\n  axios\n    .get(`${API_HOST}/categories`)\n    .then((data) => {\n      const categories = data.data.data;\n      dispatch(\n        updateCategoriesProps([{ prop: \"categories\", value: categories }])\n      );\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const getCategory = (_id) => (dispatch) => {\n  axios\n    .get(`${API_HOST}/categories/${_id}`)\n    .then((data) => {\n      const category = data.data.data;\n      dispatch(\n        updateCategoriesProps([{ prop: \"currentCategory\", value: category }])\n      );\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const addNewCategory = (category) => (dispatch) => {\n  console.log(\"category\", category);\n  axios\n    .post(`${API_HOST}/categories`, category)\n    .then((data) => {\n      const category = data.data.data;\n      dispatch(mergeCategoriesProps([{ prop: \"categories\", value: category }]));\n      dispatch(\n        updateCategoriesProps([{ prop: \"isCategoryModal\", value: false }])\n      );\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const updateCategory = (category, index) => (dispatch) => {\n  axios\n    .patch(`${API_HOST}/categories/${category._id}`, category)\n    .then((data) => {\n      const category = data.data.data;\n      dispatch(\n        updateCategoriesProps([\n          { prop: \"categories.\" + index, value: category },\n        ])\n      );\n      dispatch(\n        updateCategoriesProps([{ prop: \"isCategoryModal\", value: false }])\n      );\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\nexport const deleteCategory = (_id, index) => (dispatch) => {\n  axios\n    .delete(`${API_HOST}/categories/${_id}`)\n    .then((data) => {\n      dispatch(deleteCategoriesProps([{ prop: \"categories.\" + index }]));\n      showMessage(\"Success!\", data.data.message, \"success\");\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table-v6\";\nimport \"react-table-v6/react-table.css\";\nimport { Button } from \"reactstrap\";\n\nimport { updateCategoriesProps, deleteCategory } from \"../../../actions/categoriesActions\";\n\nclass CategoriesTable extends Component {\n  editCategoryModal = (category, index) => {\n    category.index = index;\n    this.props.updateCategoriesProps([\n      { prop: \"currentCategory\", value: category },\n      {\n        prop: \"isCategoryModal\",\n        value: !this.props.isModal,\n      },\n    ]);\n  };\n\n  renderActions = ({ original, index }) => {\n    return (\n      <div>\n        <Button\n          onClick={this.editCategoryModal.bind(this, original, index)}\n          color=\"primary\"\n          style={{ marginRight: 10, marginLeft: 10 }}\n        >\n          <i className=\"fa fa-edit\" />\n        </Button>\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            if (window.confirm(\"Are you sure?\")) {\n              this.props.deleteCategory(original._id, index);\n            }\n          }}\n        >\n          <i className=\"fa fa-trash\" />\n        </Button>\n      </div>\n    );\n  };\n  columns = [\n    { Header: \"Id\", accessor: \"_id\" },\n    { Header: \"Name\", accessor: \"name\" },\n    {\n      Header: \"Actions\",\n      Cell: this.renderActions.bind(this),\n      sortable: false,\n    },\n  ];\n\n  render() {\n    const { categories } = this.props;\n\n    return (\n      <ReactTable\n        defaultPageSize={5}\n        columns={this.columns}\n        data={categories}\n        getTdProps={() => {\n          return {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\",\n            },\n          };\n        }}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { categories, isCategoryModal } = state.categories;\n  return { categories, isModal: isCategoryModal };\n};\n\nexport default connect(mapStateToProps, {\n  updateCategoriesProps,\n  deleteCategory,\n})(CategoriesTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n} from \"reactstrap\";\n\nimport Table from \"./CategoriesTable\";\n\nimport {\n  updateCategoriesProps,\n  addNewCategory,\n  updateCategory,\n} from \"../../../actions/categoriesActions\";\n\nclass Categories extends Component {\n  toggle = () => {\n    this.props.updateCategoriesProps([\n      {\n        prop: \"currentCategory\",\n        value: { name: \"\" },\n      },\n      {\n        prop: \"isCategoryModal\",\n        value: !this.props.isModal,\n      },\n    ]);\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.props.updateCategoriesProps([\n      { prop: \"currentCategory.\" + name, value },\n    ]);\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { addNewCategory, updateCategory, currentCategory } = this.props;\n    currentCategory._id\n      ? updateCategory(currentCategory, currentCategory.index)\n      : addNewCategory(currentCategory);\n  };\n  render() {\n    const { isModal, currentCategory } = this.props;\n    return (\n      <div>\n        <Row>\n          <Col\n            sm=\"12\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"20px\",\n            }}\n          >\n            <Button color=\"success\" onClick={this.toggle}>\n              <i className=\"fa fa-plus\" />\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            <Table />\n          </Col>\n        </Row>\n\n        <Modal isOpen={isModal} toggle={this.toggle}>\n          <Form onSubmit={this.onSubmit} method=\"POST\">\n            <ModalHeader toggle={this.toggle}>Category</ModalHeader>\n            <ModalBody>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"category name\"\n                value={currentCategory.name}\n                onChange={this.onChange}\n                required\n              />\n            </ModalBody>\n            <ModalFooter>\n              <Button type=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n              <Button color=\"secondary\" onClick={this.toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isCategoryModal, currentCategory } = state.categories;\n  return { isModal: isCategoryModal, currentCategory };\n};\n\nexport default connect(mapStateToProps, {\n  updateCategoriesProps,\n  addNewCategory,\n  updateCategory,\n})(Categories);\n","import React from \"react\";\nimport { NavItem, NavLink } from \"reactstrap\";\nimport classnames from \"classnames\";\n\nexport default function CustomNavItem({ name, tab, activeTab, toggle }) {\n  return (\n    <NavItem>\n      <NavLink\n        className={classnames({ active: activeTab === tab })}\n        onClick={() => {\n          toggle(tab);\n        }}\n      >\n        {name}\n      </NavLink>\n    </NavItem>\n  );\n}\n","import {\n  UPDATE_ADMIN_PROPS,\n  DELETE_ADMIN_PROPS,\n  MERGE_ADMIN_PROPS,\n} from \"./types\";\nimport axios from \"axios\";\n\nimport { API_HOST, handleError, showMessage } from \"../utils\";\n\nexport const updateAdminProps = (payload) => (dispatch) => {\n  dispatch({\n    type: UPDATE_ADMIN_PROPS,\n    payload,\n  });\n};\n\nexport const deleteAdminProps = (payload) => (dispatch) => {\n  dispatch({\n    type: DELETE_ADMIN_PROPS,\n    payload,\n  });\n};\n\nexport const mergeAdminProps = (payload) => (dispatch) => {\n  dispatch({\n    type: MERGE_ADMIN_PROPS,\n    payload,\n  });\n};\n\nexport const loginAdmin = (email, password) => (dispatch) => {\n  console.log(email, password);\n  axios\n    .post(`${API_HOST}/admin/login`, { username: email, password })\n    .then((data) => {\n      const { token } = data.data;\n      dispatch(updateAdminProps([{ prop: \"token\", value: token }]));\n      showMessage(\n        \"Login Success!\",\n        \"Welecome, redirecting to admin panel...\",\n        \"success\"\n      );\n    })\n    .catch((err) => {\n      handleError(err);\n    });\n};\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { Container, TabContent, TabPane, Nav } from \"reactstrap\";\n\nimport Authers from \"./authors\";\nimport Books from \"./books\";\nimport Categories from \"./categories\";\nimport CustomNavItem from \"./CustomNavItem\";\n\nimport { APP_NAME } from \"../../utils\";\n\nimport {\n  updateAdminProps,\n\n} from \"../../actions/adminAction\";\n\nimport { getAllBooks } from \"../../actions/booksActions\";\nimport { getAllAuthors } from \"../../actions/authorsActions\";\nimport { getAllCategories } from \"../../actions/categoriesActions\";\n\nclass Home extends Component {\n  componentDidMount() {\n    document.title = `Admin panel - ${APP_NAME}`;\n    axios.defaults.headers.common[\"Authorization\"] =\n      \"Bearer \" + this.props.token;\n    this.props.getAllBooks();\n    this.props.getAllAuthors();\n    this.props.getAllCategories();\n  }\n\n  toggle = (tab) => {\n    if (this.props.activeTab !== tab)\n      this.props.updateAdminProps([{ prop: \"activeTab\", value: tab }]);\n  };\n\n  render() {\n    const { activeTab } = this.props;\n\n    return (\n      <Container>\n        <Nav tabs>\n          <CustomNavItem\n            name=\"Categories\"\n            tab=\"1\"\n            activeTab={activeTab}\n            toggle={this.toggle}\n          />\n          <CustomNavItem\n            name=\"Books\"\n            tab=\"2\"\n            activeTab={activeTab}\n            toggle={this.toggle}\n          />\n          <CustomNavItem\n            name=\"Authors\"\n            tab=\"3\"\n            activeTab={activeTab}\n            toggle={this.toggle}\n          />\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Categories />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Books />\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Authers />\n          </TabPane>\n        </TabContent>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { activeTab, token } = state.admin;\n  return { activeTab, token };\n};\n\nexport default connect(mapStateToProps, {\n  updateAdminProps,\n  getAllBooks,\n  getAllAuthors,\n  getAllCategories,\n})(Home);\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  FormText,\n  FormFeedback,\n} from \"reactstrap\";\nimport \"./Login.css\";\nimport { connect } from \"react-redux\";\n\nimport { updateAdminProps } from \"../../../actions/adminAction\";\n\nimport { APP_NAME } from \"../../../utils\";\n\nimport { loginAdmin } from \"../../../actions/adminAction\";\n\nclass Login extends Component {\n  validateEmail = (e) => {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailState = emailRex.test(e.target.value)\n      ? \"has-success\"\n      : \"has-danger\";\n\n    this.props.updateAdminProps([{ prop: \"emailState\", value: emailState }]);\n  };\n\n  componentDidMount() {\n    document.title = `Admin Login - ${APP_NAME}`;\n  }\n\n  handleChange = (event) => {\n    const { target } = event;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n    this.props.updateAdminProps([{ prop: name, value }]);\n  };\n\n  submitForm(e) {\n    e.preventDefault();\n    const { email, password } = this.props;\n    if (email && password) this.props.loginAdmin(email, password);\n  }\n\n  render() {\n    const { email, password, emailState } = this.props;\n    return (\n      <Container className=\"Login\">\n        <h2>Sign In</h2>\n        <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\n          <Col>\n            <FormGroup>\n              <Label>Username</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                placeholder=\"myemail@email.com\"\n                value={email}\n                valid={emailState === \"has-success\"}\n                invalid={emailState === \"has-danger\"}\n                onChange={(e) => {\n                  this.validateEmail(e);\n                  this.handleChange(e);\n                }}\n                required\n              />\n              <FormFeedback valid>\n                That's a tasty looking email you've got there.\n              </FormFeedback>\n              <FormFeedback>\n                Uh oh! Looks like there is an issue with your email. Please\n                input a correct email.\n              </FormFeedback>\n              <FormText>Your username is most likely your email.</FormText>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"********\"\n                value={password}\n                onChange={(e) => this.handleChange(e)}\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Button>Submit</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { email, password, emailState, token } = state.admin;\n  return { email, password, emailState, token };\n};\n\nexport default connect(mapStateToProps, {\n  updateAdminProps,\n  loginAdmin,\n})(Login);\n","import React from \"react\";\nvar style = {\n  backgroundColor: \"#F8F8F8\",\n  borderTop: \"1px solid #E7E7E7\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nvar phantom = {\n  display: \"block\",\n  padding: \"20px\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nfunction Footer() {\n  return (\n    <div>\n      <div style={phantom} />\n      <div style={style}>\n        <a href=\"https://github.com/aAbdelnaby88/Good-Reads/\" target=\"_blank\">\n          By ITI students - cloud platfrom development track - intake 40\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Form,\n  Input,\n  NavbarToggler,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { HOST } from \"../../../utils\";\nimport { logoutUser } from \"../../../actions/loginActions\";\nimport { searchBooks } from \"../../../actions/booksActions\";\n\nclass MainNavbar extends Component {\n  constructor() {\n    super();\n    this.state = { isOpen: false };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { value } = e.target.q;\n    if (!value) return;\n    this.props.searchBooks(value);\n    this.props.history.push(`/search?q=${value}`);\n  };\n\n  render() {\n    console.log(\"prp\", this.props);\n    const { image } = this.props.user;\n    const toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n    return (\n      <Navbar color=\"light\" light expand=\"md\" style={{ marginBottom: \"10px\" }}>\n        <NavbarBrand tag={Link} to=\"/dashboard\">\n          Good Reads\n        </NavbarBrand>\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"/categories\" tag={Link}>\n                Categories\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/books\" tag={Link}>\n                Books\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/authors\" tag={Link}>\n                Authors\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"offset-md-1  col-8\">\n              <Form onSubmit={this.onSubmit}>\n                <Input\n                  size=\"40\"\n                  type=\"text\"\n                  name=\"q\"\n                  placeholder=\"Type book name\"\n                />\n              </Form>\n            </NavItem>\n          </Nav>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <img\n                src={`${HOST}/images/${image}`}\n                style={{ width: \"50px\", height: \"40px\" }}\n                className=\"rounded-circle\"\n              />\n            </NavItem>\n            <NavItem className=\"offset-md-1  col-12\">\n              <Button onClick={this.props.logoutUser}>\n                <i className=\"fa fa-sign-out\"></i>\n              </Button>\n            </NavItem>\n          </Nav>\n        </Collapse>\n        <NavbarToggler onClick={toggle} />\n      </Navbar>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { user } = state.login;\n  return { user };\n};\n\nexport default connect(mapStateToProps, { logoutUser, searchBooks })(\n  MainNavbar\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Container, T } from \"reactstrap\";\n\nimport ReactTable from \"react-table-v6\";\nimport Select from \"react-select\";\n\nimport { HOST, APP_NAME } from \"../../../utils\";\nimport {\n  getAllTodos,\n  updateBooksProps,\n  updateTodoListItem,\n} from \"../../../actions/booksActions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    document.title = `Dashboard - ${APP_NAME}`;\n    this.props.getAllTodos();\n  }\n\n  renderSelect = ({ original, index }) => {\n    return (\n      <Select\n        options={[\n          { shelve: \"want to read\" },\n          { shelve: \"reading\" },\n          { shelve: \"read\" },\n        ]}\n        menuPortalTarget={document.body}\n        value={original}\n        getOptionLabel={(todo) => todo.shelve}\n        getOptionValue={(todo) => todo}\n        onChange={(newTodo) => {\n          this.props.updateTodoListItem(\n            original.book._id,\n            newTodo.shelve,\n            index\n          );\n        }}\n      />\n    );\n  };\n  columns = [\n    {\n      Header: \"Cover\",\n      Cell: ({\n        original: {\n          book: { image },\n        },\n      }) => (\n        <img\n          src={`${HOST}/images/${image}`}\n          style={{ width: \"50px\", height: \"40px\" }}\n        />\n      ),\n    },\n    { Header: \"Name\", accessor: \"book.name\", filterable: true },\n    {\n      Header: \"Author\",\n      Cell: ({\n        original: {\n          book: { author },\n        },\n      }) => {\n        const { authors } = this.props;\n        if (authors && authors.hasOwnProperty(author)) {\n          const { firstName, lastName } = authors[author];\n          return firstName + \" \" + lastName;\n        }\n      },\n    },\n    {\n      Header: \"Shelve\",\n      Cell: this.renderSelect.bind(this),\n      sortable: false,\n    },\n  ];\n\n  render() {\n    const { activeTodosTab, todos } = this.props;\n    return (\n      <Container>\n        <ReactTable\n          defaultPageSize={5}\n          columns={this.columns}\n          data={todos}\n          getTdProps={(state, rowInfo, column) => {\n            return {\n              style: { overflow: \"visible\" },\n            };\n          }}\n        />\n      </Container>\n    );\n  }\n}\n\nconst mapSateToProps = (state) => {\n  const { activeTodosTab, todos } = state.books;\n  const { authorsList } = state.authors;\n  return { activeTodosTab, todos, authors: authorsList };\n};\nexport default connect(mapSateToProps, {\n  getAllTodos,\n  updateBooksProps,\n  updateTodoListItem,\n})(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col,Jumbotron } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport {APP_NAME} from '../../../utils'\n\nclass Categories extends Component {\n  componentDidMount(){\n    document.title = `Categories - ${APP_NAME}`;\n\n  }\n  render() {\n    const { categories } = this.props;\n    return (\n      <div>\n        \n        <h2\n          style={{\n            fontWeight: \"bold\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          Categories\n        </h2>\n        <hr />\n        <Row>\n          {Object.keys(categories).map((_id) => (\n            <Col key={_id} xs=\"6\">\n              <div>\n                <Link to={\"/categories/\" + _id}>\n                  <h3\n                    style={{\n                      color: \"#b6e3e9\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  >\n                    {categories[_id].name}\n                  </h3>\n                </Link>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { categoriesList } = state.categories;\n  return { categories: categoriesList };\n};\n\nexport default connect(mapStateToProps)(Categories);\n","import React from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport { HOST } from \"../../../utils\";\n\nexport default function Book({ _id, name, image, author }) {\n  return (\n    <Card>\n      <Link to={`/books/${_id}`}>\n        <CardImg top height=\"300p\" src={`${HOST}/images/${image}`} alt={name} />\n      </Link>\n      <CardBody>\n        <CardTitle>\n          Name:{\" \"}\n          <Link\n            style={{\n              textTransform: \"capitalize\",\n              fontWeight: \"bold\",\n              color: \"#999999\",\n            }}\n            to={`/books/${_id}`}\n          >\n            {name}\n          </Link>\n        </CardTitle>\n        <CardSubtitle>\n          By:{\" \"}\n          <Link\n            style={{\n              textTransform: \"capitalize\",\n              fontWeight: \"bold\",\n              color: \"#999999\",\n            }}\n            to={`/authors/${author._id}`}\n          >\n            {author.firstName + \" \" + author.lastName}\n          </Link>\n        </CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport BookItem from \"./BookItem\";\n\nexport default class Books extends Component {\n\n  render() {\n    const { books } = this.props;\n    return (\n      <Row>\n        {books &&\n          books.map(({ _id, name, author, image }) => (\n            <Col style={{ marginBottom: \"20px\" }} key={_id} xs=\"3\">\n              <BookItem _id={_id} name={name} image={image} author={author} />\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Jumbotron } from \"reactstrap\";\n\nimport { getCategory } from \"../../../actions/categoriesActions\";\nimport Books from \"../books/Books\";\nimport { APP_NAME } from \"../../../utils\";\n\nclass Category extends Component {\n  render() {\n    const { category } = this.props;\n\n    if (!category) return <div></div>;\n\n    const { name, books } = category;\n    document.title = `${name} - ${APP_NAME}`;\n\n    return (\n      <div>\n        <Jumbotron\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            backgroundColor: \"#ffffe6\",\n          }}\n        >\n          <h2\n            style={{\n              fontWeight: \"bold\",\n              textTransform: \"uppercase\",\n            }}\n          >\n            {name}\n          </h2>\n        </Jumbotron>\n        <Books books={books} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const category = state.categories.categoriesList[ownProps.match.params.id];\n  return { category };\n};\n\nexport default connect(mapStateToProps, { getCategory })(Category);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\n\nimport { HOST, APP_NAME } from \"../../../utils\";\n\nclass Authors extends Component {\n  componentWillMount() {\n    document.title = `Authors - ${APP_NAME}`;\n  }\n  render() {\n    const { authors } = this.props;\n    console.log(authors);\n    return (\n      <div>\n        <h2\n          style={{\n            fontWeight: \"bold\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          Authors\n        </h2>\n        <hr />\n        <Row>\n          {Object.keys(authors).map((_id) => {\n            const { firstName, lastName, image } = this.props.authors[_id];\n            return (\n              <Col key={_id} xs=\"3\">\n                <Card>\n                  <Link to={`/authors/${_id}`}>\n                    <CardImg\n                      top\n                      height=\"300p\"\n                      src={`${HOST}/images/${image}`}\n                      alt=\"Autho name\"\n                    />\n                  </Link>\n                  <CardBody>\n                    <CardTitle>\n                      Name:{\" \"}\n                      <Link\n                        style={{\n                          textTransform: \"capitalize\",\n                          fontWeight: \"bold\",\n                          color: \"#999999\",\n                        }}\n                        to={`/authors/${_id}`}\n                      >\n                        {`${firstName} ${lastName}`}\n                      </Link>\n                    </CardTitle>\n                  </CardBody>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { authorsList } = state.authors;\n  return { authors: authorsList };\n};\n\nexport default connect(mapStateToProps)(Authors);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Jumbotron, CardImg, Row, Col } from \"reactstrap\";\n\nimport { HOST, APP_NAME } from \"../../../utils\";\nimport Books from \"../books/Books\";\n\nclass Author extends Component {\n  render() {\n    const { author } = this.props;\n    if (!author) return <div></div>;\n\n    const { firstName, lastName, dob, image, books } = author;\n\n    const name = author.firstName + \" \" + author.lastName;\n\n    document.title = `${name} - ${APP_NAME}`;\n\n    return (\n      <div>\n        <Jumbotron\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Row>\n            <Col sm=\"3\">\n              <CardImg\n                top\n                height=\"300p\"\n                src={`${HOST}/images/${image}`}\n                alt=\"Autho name\"\n              />\n            </Col>\n            <Col sm=\"8\">\n              Name:\n              <h2\n                style={{\n                  fontWeight: \"bold\",\n                  textTransform: \"uppercase\",\n                }}\n              >\n                {`${firstName} ${lastName}`}\n              </h2>\n              Date of birth:{\" \"}\n              <h2\n                style={{\n                  fontWeight: \"bold\",\n                  textTransform: \"uppercase\",\n                }}\n              >\n                {new Date(dob).toDateString()}\n              </h2>\n            </Col>\n          </Row>\n        </Jumbotron>\n        <Books books={books} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const author = state.authors.authorsList[ownProps.match.params.id];\n  return { author };\n};\n\nexport default connect(mapStateToProps, {})(Author);\n","import React, { Component } from \"react\";\nimport Books from \"./Books\";\nimport { APP_NAME } from \"../../../utils\";\n\nexport default class index extends Component {\n  componentDidMount() {\n    document.title = `Books- ${APP_NAME}`;\n  }\n  render() {\n    return <Books books={this.props.books} />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport {\n  Row,\n  Col,\n  Media,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"react-star-ratings\";\n\nimport { HOST, APP_NAME } from \"../../../utils\";\nimport {\n  updateBooksProps,\n  getBook,\n  submitRate,\n  updateRate,\n  submitTodo,\n  updateTodo,\n  addReview,\n  deleteReview,\n} from \"../../../actions/booksActions\";\nexport class Book extends Component {\n  componentDidMount() {\n    const _id = this.props.match.params.id;\n    this.props.getBook(_id);\n  }\n\n  render() {\n    const { userId, book } = this.props;\n    const {\n      _id,\n      name,\n      author,\n      category,\n      image,\n      myRate,\n      rates,\n      todo,\n      review,\n      reviews,\n    } = book;\n\n    let userRateIndex = -1;\n    let rate = rates\n      ? rates.reduce((sum, rate, index) => {\n          if (myRate && myRate._id === rate._id) userRateIndex = index;\n          return sum + rate.value;\n        }, 0)\n      : 0;\n    rate = rates ? rate / rates.length : 0;\n\n    document.title = `${name}- ${APP_NAME}`;\n\n    return (\n      <div>\n        <Row>\n          <Col\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n            xs=\"3\"\n          >\n            <Media\n              object\n              width=\"100%\"\n              height=\"300px\"\n              src={`${HOST}/images/${image}`}\n              alt={name}\n            />\n            <div style={{ width: \"80%\" }}>\n              <Select\n                options={[\n                  { shelve: \"want to read\" },\n                  { shelve: \"reading\" },\n                  { shelve: \"read\" },\n                ]}\n                value={todo}\n                getOptionLabel={(todo) => todo.shelve}\n                getOptionValue={(todo) => todo}\n                onChange={(newTodo) => {\n                  todo\n                    ? this.props.updateTodo(_id, newTodo.shelve)\n                    : this.props.submitTodo(_id, newTodo.shelve);\n                }}\n              />\n            </div>\n            <Rating\n              rating={myRate ? myRate.value : 0}\n              starHoverColor=\"#ffe680\"\n              starRatedColor=\"#ffe680\"\n              changeRating={(value) => {\n                myRate\n                  ? this.props.updateRate(myRate._id, value, userRateIndex)\n                  : this.props.submitRate(_id, value);\n              }}\n              numberOfStars={5}\n              name=\"rating\"\n              starDimension=\"30px\"\n              starSpacing=\"5px\"\n            />\n          </Col>\n          <Col xm=\"8\">\n            <h2>\n              Title:{\" \"}\n              <i\n                style={{\n                  textTransform: \"uppercase\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {name}\n              </i>\n            </h2>\n            <h5>\n              By:{\" \"}\n              {author && (\n                <Link\n                  style={{\n                    textTransform: \"capitalize\",\n                    fontWeight: \"bold\",\n                    color: \"#999999\",\n                  }}\n                  to={`/authors/${author._id}`}\n                >\n                  {author.firstName + \" \" + author.lastName}\n                </Link>\n              )}\n            </h5>\n            <h5 style={{ fontWeight: \"bold\", textTransform: \"uppercase\" }}>\n              {category && (\n                <Link\n                  style={{\n                    textTransform: \"capitalize\",\n                    fontWeight: \"bold\",\n                    color: \"#999999\",\n                  }}\n                  to={`/categories/${category._id}`}\n                >\n                  {category.name}\n                </Link>\n              )}\n            </h5>\n            <Rating\n              rating={rate ? rate : 0}\n              starRatedColor=\"#ffe680\"\n              numberOfStars={5}\n              name=\"rating\"\n              starDimension=\"30px\"\n              starSpacing=\"5px\"\n            />\n\n            <p>\n              {rate} - {rates ? rates.length : 0} ratings\n            </p>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col sm=\"12\">\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                this.props.addReview(_id, review);\n              }}\n            >\n              <FormGroup>\n                <Label>Write your review:</Label>\n                <Input\n                  placeholder=\"Write something\"\n                  value={review}\n                  type=\"textarea\"\n                  onChange={(e) => {\n                    this.props.updateBooksProps([\n                      { prop: \"currentBook.review\", value: e.target.value },\n                    ]);\n                  }}\n                  required\n                />\n                <FormGroup\n                  style={{\n                    paddingTop: \"10px\",\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <Button type=\"submit\" color=\"primary\">\n                    Add review\n                  </Button>\n                </FormGroup>\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\">\n            {reviews &&\n              reviews.map(\n                (\n                  {\n                    _id,\n                    content,\n                    date,\n                    user: { _id: reviewrId, firstName, lastName },\n                  },\n                  index\n                ) => {\n                  return (\n                    <Card>\n                      <CardBody>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <div>\n                            <CardTitle style={{ fontWeight: \"bold\" }}>\n                              <h5>By: {`${firstName} ${lastName}`}</h5>\n                            </CardTitle>\n                            <CardSubtitle\n                              style={{ textDecoration: \"underline\" }}\n                            >\n                              {new Date(date).toDateString()}\n                            </CardSubtitle>\n                          </div>\n                          {userId === reviewrId && (\n                            <Button\n                              className=\"btn btn-danger\"\n                              onClick={() => {\n                                if (window.confirm(\"Are you sure?\")) {\n                                  this.props.deleteReview(_id, index);\n                                }\n                              }}\n                            >\n                              <i className=\"fa fa-trash\"></i>\n                            </Button>\n                          )}\n                        </div>\n\n                        <CardText style={{ textTransform: \"capitalize\" }}>\n                          {content}\n                        </CardText>\n                      </CardBody>\n                    </Card>\n                  );\n                }\n              )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const book = state.books.currentBook;\n  const userId = state.login.user.id;\n  return { book, userId };\n};\n\nexport default connect(mapStateToProps, {\n  updateBooksProps,\n  getBook,\n  submitRate,\n  updateRate,\n  submitTodo,\n  updateTodo,\n  addReview,\n  deleteReview,\n})(Book);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport queryString from \"query-string\";\n\nimport Books from \"../books/Books\";\nimport { APP_NAME } from \"../../../utils\";\n\nclass Search extends Component {\n  componentDidMount() {\n    document.title = `Search results - ${APP_NAME}`;\n  }\n  render() {\n    const { search } = this.props;\n    let params = queryString.parse(this.props.location.search);\n    return (\n      <div>\n        <h4>{`${search.length} items found for '${params.q}'`}</h4>\n        <hr />\n        <Books books={search} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { search } = state.books;\n  return { search };\n};\n\nexport default connect(mapStateToProps)(Search);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Switch, Route, Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport JWT from \"jwt-decode\";\nimport axios from \"axios\";\nimport { Container } from \"reactstrap\";\n\nimport Navbar from \"./navbar\";\nimport Dashboard from \"./dashboard\";\n\nimport Categories from \"./categories\";\nimport Category from \"./categories/category\";\n\nimport Authors from \"./authors\";\nimport Author from \"./authors/Author\";\n\nimport Books from \"./books\";\nimport Book from \"./books/Book\";\n\nimport Search from \"./search\";\n\nimport { getUserToken } from \"../../utils\";\nimport { updateLoginField } from \"../../actions/loginActions\";\n\nimport { getAllData } from \"../../actions/booksActions\";\n\nclass UserHome extends Component {\n  constructor() {\n    super();\n    this.token = getUserToken();\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + this.token;\n  }\n  componentDidMount() {\n    this.props.updateLoginField(\"token\", this.token);\n    this.props.updateLoginField(\"user\", JWT(this.token));\n    this.props.getAllData();\n  }\n\n  componentDidUpdate() {\n    if (!this.props.token) this.props.history.push(\"/\");\n  }\n  render() {\n    const { books } = this.props;\n    return (\n      <Container>\n          <Switch>\n          <Route component={Navbar} />\n\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n            <Route path=\"/categories\" exact component={Categories} />\n            <Route path=\"/categories/:id\" exact component={Category} />\n\n            <Route path=\"/authors\" exact component={Authors} />\n            <Route path=\"/authors/:id\" exact component={Author} />\n\n            <Route path=\"/search\" exact component={Search} />\n\n            <Route path=\"/books\" exact>\n              <Books books={books} />\n            </Route>\n            <Route path=\"/books/:id\" exact component={Book} />\n          </Switch>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { token } = state.login;\n  const { books } = state.books;\n  return { token, books };\n};\nexport default connect(mapStateToProps, {\n  updateLoginField,\n  getAllData,\n})(UserHome);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass AdminRoute extends Component {\n  render() {\n    const { component: Component, token, ...rest } = this.props;\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          token ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  }\n}\nconst mapStateTopProps = (state) => ({ token: state.admin.token });\n\nexport default connect(mapStateTopProps)(AdminRoute);\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass AdminLoggedInRoute extends Component {\n  render() {\n    const { component: Component, token, ...rest } = this.props;\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          token ? <Redirect to=\"/admin\" /> : <Component {...props} />\n        }\n      />\n    );\n  }\n}\nconst mapStateTopProps = (state) => ({ token: state.admin.token });\n\nexport default connect(mapStateTopProps)(AdminLoggedInRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getUserToken } from \"../../utils\";\n\nexport default ({ component: Component, ...rest }) => {\n  const token = getUserToken();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { getUserToken } from \"../../utils\";\n\nexport default ({ component: Component, ...rest }) => {\n  const token = getUserToken();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport Thunk from \"redux-thunk\";\n\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\nimport RootReducer from \"./reducers\";\nimport \"./App.css\";\n\nimport Home from \"./components/home\";\nimport AdminHome from \"./components/admin/Home\";\nimport AdminLogin from \"./components/admin/login\";\nimport Footer from \"./components/user/footer\";\nimport UserHome from \"./components/user/Home\";\n\nimport AdminRoute from \"./components/admin/AdminRoute\";\nimport AdminLoggedInRoute from \"./components/admin/AdminLoggedInRoute\";\n\nimport UserRoute from \"./components/user/UserRoute\";\nimport UserLoggedInRoute from \"./components/user/UserLoggedInRoute\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  RootReducer,\n  composeEnhancers(applyMiddleware(Thunk))\n);\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactNotification />\n      <Router>\n        <Switch>\n          <AdminLoggedInRoute component={AdminLogin} path=\"/login\" exact />\n          <AdminRoute component={AdminHome} path=\"/admin\" exact />\n\n          <UserLoggedInRoute path=\"/\" exact component={Home} />\n          <UserRoute path=\"/\" component={UserHome} />\n        </Switch>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}